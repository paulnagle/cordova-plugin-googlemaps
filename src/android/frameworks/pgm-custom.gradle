def searchFileInParents(target) {
  def searchPath = target
  for (int i = 0; i < 8; i++) {
    println(searchPath)
    def targetFile = file(searchPath)
    if(!targetFile.canRead()) {
      searchPath = '../' + searchPath;
    } else {
      return targetFile;
    }
  }
  return null;
}

ext {
  android {
    useAndroidX=true
    enableJetifier=true
  }
}
android {

  // #1. Find (project)/config.xml file,
  //     because ionic capacitor does not copy <preference> nodes
  def configXmlFile = searchFileInParents("config.xml")

  if (configXmlFile == null) {
    // #2. Find (project)/app/src/main/res/xml/config.xml file,
    //     cordova should copy <preference> to this file
    configXmlFile = searchFileInParents("app/src/main/res/xml/config.xml")
  }

  if (configXmlFile == null) {
    throw new GradleException("Can not find config.xml file.")
  }

  // parse xml file
  def widget = new XmlParser().parse(configXmlFile)
  if (widget.preference == null) {
    throw new GradleException("widget is null.")
  }
  if (widget.preference.size() == 0) {
    throw new GradleException("Please add '<preference name=\"GOOGLE_MAPS_ANDROID_API_KEY\" />' to the config.xml file.")
  }
  println("preference = " + widget.preference.size())
  Properties props = new Properties()
  def isKeyFound = 0

  props.setProperty("GOOGLE_MAPS_ANDROID_SDK", "maps-sdk-3.0.0-beta");
  props.setProperty("APP_COMPAT_VERSION", "1.1.0");
  props.setProperty("PLAY_SERVICES_BASEMENT_VERSION", "17.2.1");
  props.setProperty("PLAY_SERVICES_BASE_VERSION", "17.2.1");
  props.setProperty("PLAY_SERVICES_GCM_VERSION", "17.0.0");
  props.setProperty("PLAY_SERVICES_LOCATION_VERSION", "17.0.0");


  widget.preference.each { pref ->
    def name = pref.attributes().name
    def value = pref.attributes().value
    println("name = " + name);
    if (name == "GOOGLE_MAPS_ANDROID_API_KEY") {
      isKeyFound = 1
      props.setProperty(name, value)
    }
    if (name == "GOOGLE_MAPS_ANDROID_SDK" ||
        name == "APP_COMPAT_VERSION" ||
        name == "PLAY_SERVICES_BASEMENT_VERSION" ||
        name == "PLAY_SERVICES_BASE_VERSION" ||
        name == "PLAY_SERVICES_GCM_VERSION" ||
        name == "PLAY_SERVICES_LOCATION_VERSION") {
      props.setProperty(name, value)
    }
  }


  if (isKeyFound == 0) {
    throw new GradleException("Please add '<preference name=\"GOOGLE_MAPS_ANDROID_API_KEY\" />' to the config.xml file.")
  }

  //----------
  // maps SDK
  //----------
  def libsDirPath = System.getProperty("user.dir")
  def libsDir = new File("${libsDirPath}/libs/")
  if (!libsDir.exists()) {
    libsDir.mkdirs()
  }

  def mapsSDK = props.getProperty("GOOGLE_MAPS_ANDROID_SDK")
  def f = new File("${libsDir.absolutePath}/${mapsSDK}.aar")
  println("---->GOOGLE_MAPS_ANDROID_SDK = " + f.absolutePath);
  if (!f.exists()) {
    new URL("https://dl.google.com/dl/geosdk/${mapsSDK}.aar").withInputStream{ i -> f.withOutputStream{ it << i }}
  }
  dependencies {
    implementation name: mapsSDK, ext:'aar'
  }

  //-------------
  // dependencies
  //-------------
  def APP_COMPAT_VERSION = props.getProperty("APP_COMPAT_VERSION")
  def PLAY_SERVICES_BASEMENT_VERSION = props.getProperty("PLAY_SERVICES_BASEMENT_VERSION")
  def PLAY_SERVICES_BASE_VERSION = props.getProperty("PLAY_SERVICES_BASE_VERSION")
  def PLAY_SERVICES_GCM_VERSION = props.getProperty("PLAY_SERVICES_GCM_VERSION")
  def PLAY_SERVICES_LOCATION_VERSION = props.getProperty("PLAY_SERVICES_LOCATION_VERSION")

  println("---->APP_COMPAT_VERSION = ${APP_COMPAT_VERSION}")
  println("---->PLAY_SERVICES_BASEMENT_VERSION = ${PLAY_SERVICES_BASEMENT_VERSION}")
  println("---->PLAY_SERVICES_BASE_VERSION = ${PLAY_SERVICES_BASE_VERSION}")
  println("---->PLAY_SERVICES_GCM_VERSION = ${PLAY_SERVICES_GCM_VERSION}")
  println("---->PLAY_SERVICES_LOCATION_VERSION = ${PLAY_SERVICES_LOCATION_VERSION}")
  dependencies {
    implementation "androidx.appcompat:appcompat:${APP_COMPAT_VERSION}"
    implementation "com.google.android.gms:play-services-basement:${PLAY_SERVICES_BASEMENT_VERSION}"
    implementation "com.google.android.gms:play-services-base:${PLAY_SERVICES_BASE_VERSION}"
    implementation "com.google.android.gms:play-services-gcm:${PLAY_SERVICES_GCM_VERSION}"
    implementation "com.google.android.gms:play-services-location:${PLAY_SERVICES_LOCATION_VERSION}"
  }


  buildTypes {
    debug {
      manifestPlaceholders.GOOGLE_MAPS_ANDROID_API_KEY = props.getProperty("GOOGLE_MAPS_ANDROID_API_KEY")
    }
    release {
      manifestPlaceholders.GOOGLE_MAPS_ANDROID_API_KEY = props.getProperty("GOOGLE_MAPS_ANDROID_API_KEY")
    }
  }
}
